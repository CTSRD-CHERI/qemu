#
# RISC-V translation routines for the RVXI Base Integer Instruction Set.
#
# Copyright (c) 2018 Peer Adelt, peer.adelt@hni.uni-paderborn.de
#                    Bastian Koppelmann, kbastian@mail.uni-paderborn.de
#
# This program is free software; you can redistribute it and/or modify it
# under the terms and conditions of the GNU General Public License,
# version 2 or later, as published by the Free Software Foundation.
#
# This program is distributed in the hope it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.

# Immediates:
%uimm_cl_q     10:1 5:2 11:2      !function=ex_shift_4

%uimm_6bit_lq 2:4 12:1 6:1           !function=ex_shift_4
%uimm_6bit_sq 7:4 11:2               !function=ex_shift_4

# Formats 16:
@cl_q      ... ... ... .. ... .. &i      imm=%uimm_cl_q   rs1=%rs1_3  rd=%rs2_3
@cs_q      ... ... ... .. ... .. &s      imm=%uimm_cl_q   rs1=%rs1_3  rs2=%rs2_3

@c_lqsp    ... . .....  ..... .. &i      imm=%uimm_6bit_lq rs1=2 %rd
@c_sqsp    ... . .....  ..... .. &s      imm=%uimm_6bit_sq rs1=2 rs2=%rs2_5

# *** RV64C Standard Extension (Quadrant 0) ***
{
  fld             001  ... ... .. ... 00 @cl_d ?!pred_capmode
  lc              001  ... ... .. ... 00 @cl_q ?pred_capmode
}
ld                011  ... ... .. ... 00 @cl_d
{
  fsd             101  ... ... .. ... 00 @cs_d ?!pred_capmode
  sc              101  ... ... .. ... 00 @cs_q ?pred_capmode
}
sd                111  ... ... .. ... 00 @cs_d

# *** RV64C Standard Extension (Quadrant 1) ***
{
  illegal         001 -  00000  ----- 01 # c.addiw, RES rd=0
  addiw           001 .  .....  ..... 01 @ci
}
subw              100 1 11 ... 00 ... 01 @cs_2
addw              100 1 11 ... 01 ... 01 @cs_2

# *** RV64C Standard Extension (Quadrant 2) ***
{
  fld             001 .  .....  ..... 10 @c_ldsp ?!pred_capmode
  illegal         001 -  00000  ----- 10         ?pred_capmode # RES rd=0
  lc              001 .  .....  ..... 10 @c_lqsp ?pred_capmode
}
{
  illegal         011 -  00000  ----- 10 # c.ldsp, RES rd=0
  ld              011 .  .....  ..... 10 @c_ldsp
}
{
  fsd             101   ......  ..... 10 @c_sdsp ?!pred_capmode
  sc              101   ......  ..... 10 @c_sqsp ?pred_capmode
}
sd                111 .  .....  ..... 10 @c_sdsp
